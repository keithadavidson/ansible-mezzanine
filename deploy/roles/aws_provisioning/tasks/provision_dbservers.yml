# The MIT License (MIT)
#
# Copyright (c) 2015 Keith Davidson
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# Add or change a subnet group
- name: setup DB subnet group
  rds_subnet_group:
    state: present
    name: "{{ pipeline_env }}-db"
    description: "{{pipeline_env}}-db subnet"
    region: "{{ region }}"
    subnets:
      - "{{ private_subnet_id_a }}"
      - "{{ private_subnet_id_b }}"
  register: DB_group
  tags:
    - provision

- name: show db_group facts
  debug: msg="{{db_sec_group}}"
  tags:
    - provision
# RDS db setup
- name: provision RDS primary instance
  rds:
    command: create
    region: "{{ region }}"
    vpc_security_groups: "{{ db_sec_group.group_id }}"
    subnet: "{{ pipeline_env }}-db"
    instance_name: "{{ DB_name }}"
    port: "{{ DB_port }}"
    db_name: "{{ DB_name }}"
    db_engine: postgres
    size: 10
    instance_type: "{{ db_instance_type }}"
    username: "{{ DB_user }}"
    password: "{{ DB_password }}"
    wait: yes
    wait_timeout: 600
  tags:
    - provision
# Create a read-only replica and wait for it to become available
- name: provision RDS replica instance
  rds:
    command: replicate
    region: "{{ region }}"
    instance_name: "{{ DB_name }}-replica"
    source_instance: "{{ DB_name }}"
    wait: yes
    wait_timeout: 600
  ignore_errors: True
  tags:
    - provision

# Get facts about an instance
- name: gather RDS facts
  rds:
    command: facts
    region: "{{ region }}"
    instance_name: "{{ DB_name }}"
  register: rds_facts
  tags:
    - provision

- name: show instance facts
  debug: msg="{{ rds_facts }}"
  tags:
    - provision

#- name: tag a resource
#  ec2_tag:
#    resource: rds_facts
#    region: "{{ region }}"
#    state: present
#  args:
#    tags: { type: "wdbservers", env: "{{pipeline_env}}", teir: "{{pipeline_env}}-db", Name: "{{pipeline_env}}-db" }
#  tags: postgres
