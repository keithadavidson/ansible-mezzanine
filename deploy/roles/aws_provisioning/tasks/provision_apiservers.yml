# The MIT License (MIT)
#
# Copyright (c) 2015 Keith Davidson
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

- name: Get the ubuntu trusty AMI
  ec2_ami_search:
    distro: ubuntu
    release: trusty
    region: "{{ region }}"
  register: ubuntu_image
  tags:
    - provision

- name: start the apiserver instances
  ec2:
    image: "{{ ubuntu_image.ami }}"
    region: "{{ region }}"
    instance_type: "{{ api_instance_type }}"
    key_name: "{{pipeline_env}}"
    group: ["{{pipeline_env}}-api", "{{pipeline_env}}-remoteaccess"]
    instance_tags: { type: "apiservers", env: "{{pipeline_env}}", teir: "{{pipeline_env}}-api", Name: "{{pipeline_env}}-api" }
    exact_count: "{{ apiserver_count }}"
    count_tag: { teir: "{{pipeline_env}}-api" }
    vpc_subnet_id: "{{ public_subnet_id }}"
    assign_public_ip: yes
    wait: yes
  environment:
    EC2_INI_PATH: "library/ec2.ini"
  register: ec2vpc_api
  tags:
    - provision

- name: add the instance to api and environment groups
  add_host:
    hostname: "{{ item.public_dns_name }}"
    groups: "{{pipeline_env}}-api, {{pipeline_env}}"
  with_items: ec2vpc_api.instances
  when: item.public_dns_name is defined
  tags:
    - provision

- name: wait for ssh server to be running
  wait_for:
    host: "{{ item.public_dns_name }}"
    port: 22
    search_regex: OpenSSH
  with_items: ec2vpc_api.instances
  when: item.public_dns_name is defined
  tags:
    - provision